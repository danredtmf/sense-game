[gd_scene load_steps=4 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

# warning-ignore:unused_signal
signal heart(count)

var count = 0
var screen

func _ready():
# warning-ignore:return_value_discarded
	connect(\"heart\", self, \"_heart\")

func _heartbeating():
	if is_instance_valid(Core.root_menu):
		screen = Core.root_menu.view_3d.get_texture().get_data()
	else:
		screen = get_viewport().get_texture().get_data()
	var image = ImageTexture.new()
	image.create_from_image(screen)
	$rect.texture = image
	if !$anim.is_playing():
		$anim.play(\"scale\")

func _on_Timer_timeout():
	count -= 1
	_heartbeating()

func _heart(int_value: int):
	count = int_value
	
	if count > 0:
		$Timer.start()
	else:
		if is_instance_valid(Core.root_menu) && Data.is_ending || Data.is_good_ending:
			yield(get_tree().create_timer(0.3), \"timeout\")
		elif is_instance_valid(Core.root_menu) && !Data.is_ending || !Data.is_good_ending:
			yield(get_tree().create_timer(0.1), \"timeout\")
		elif is_instance_valid(Core.root_level):
			yield(get_tree().create_timer(0.05), \"timeout\")
		_heartbeating()

func _on_anim_animation_finished(_anim_name):
	if count > 0:
		$Timer.start()
"

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("rect:rect_scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("rect:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "scale"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("rect:rect_scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 1, 1 ), Vector2( 1.2, 1.2 ), Vector2( 1.4, 1.4 ), Vector2( 1.6, 1.6 ), Vector2( 1.8, 1.8 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("rect:modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 0, 0, 1 ), Color( 1, 0, 0, 0 ) ]
}

[node name="screen_trigger" type="Control"]
pause_mode = 1
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )

[node name="rect" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 640, 360 )
expand = true
flip_v = true

[node name="Timer" type="Timer" parent="."]
process_mode = 0
wait_time = 0.5
one_shot = true

[node name="anim" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 2 )
anims/scale = SubResource( 3 )

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="animation_finished" from="anim" to="." method="_on_anim_animation_finished"]
